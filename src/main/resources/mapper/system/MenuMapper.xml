<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.biz.framework.mapper.system.MenuMapper">

    <select id="findUpMenuList" resultType="CamelCaseMap">
        /* com.biz.framework.mapper.MenuMapper.findUpMenuList */
        SELECT *
          FROM MENU
         WHERE MENU_UP_ID IS NULL
        <if test='menuNm != null  and menuNm != "" '>
            AND MENU_NM LIKE CONCAT('%', #{menuNm}, '%')
        </if>
         ORDER BY MENU_SRT_ORD
    </select>

    <select id="findMenuListByMenuUpId" resultType="CamelCaseMap">
        /* com.biz.framework.mapper.MenuMapper.findMenuListByMenuUpId */
        SELECT *
          FROM MENU
         WHERE MENU_UP_ID   = #{menuUpId}
         ORDER BY MENU_SRT_ORD
    </select>

    <insert id="saveMenuList">
        /* com.biz.framework.mapper.MenuMapper.saveMenuList */
        INSERT INTO MENU (
            MENU_NM
            , MENU_SRT_ORD
            , MENU_UP_ID
        ) VALUES (
            #{menuNm}
            , #{menuSrtOrd}
            , #{menuUpId}
        )
    </insert>

    <update id="updateMenuList">
        /* com.biz.framework.mapper.MenuMapper.updateMenuList */
        UPDATE MENU
           SET MENU_NM          = #{menuNm}
             , MENU_SRT_ORD     = #{menuSrtOrd}
             , MENU_UP_ID       = #{menuUpId}
         WHERE MENU_ID          = #{menuId}
        <if test='menuUpId != null  and menuUpId != "" '>
           AND MENU_UP_ID       = #{menuUpId}
        </if>
    </update>

    <delete id="deleteMenu">
        /* com.biz.framework.mapper.MenuMapper.deleteMenu */
        DELETE FROM MENU
         WHERE MENU_ID      = #{menuId}
        <if test='menuUpId != null  and menuUpId != "" '>
            AND MENU_UP_ID  = #{menuUpId}
        </if>
    </delete>

    <select id="findMenuList" resultType="com.biz.framework.dto.system.MenuDto">
        /* com.biz.framework.mapper.MenuMapper.findMenuList */
        SELECT MENU_ID
             , MENU_NM
             , MENU_SRT_ORD
             , MENU_UP_ID
          FROM MENU
         ORDER BY MENU_UP_ID IS NOT NULL, MENU_SRT_ORD
    </select>

    <select id="findSideLayout" resultType="CamelCaseMap">
        /* com.biz.framework.mapper.MenuMapper.findSideLayout */
        with pgm as (
            select distinct CONCAT('PGM', mp.program_id)	as menu_id
                 , mp.menu_id		            as menu_up_id
                 , program_url 		            as url
                 , program_nm 		            as menu_nm
                 , program_srt_ord 	            as srt_ord
              from menu_program     mp
              join program 		    p
                on p.program_id     = mp.program_id
              join role_program     rp
                on rp.program_id    = p.program_id
              join role_user 		ru
                on ru.role_id		= rp.role_id
             where 1=1
               AND RU.ROLE_ID  IN
            <foreach item="item" collection="authorityList" open="(" separator="," close=")">
                #{item}
            </foreach>
        )
        SELECT CASE WHEN MENU_ID LIKE '%PGM%' THEN '3'
                    WHEN MENU_UP_ID IS NOT NULL THEN '2'
                    ELSE '1' END AS CATEGORY
             , MENU_ID
             , MENU_UP_ID
             , URL
             , MENU_NM
             , SRT_ORD
          FROM (
                select um.menu_id
                     , um.menu_up_id
                     , '' 	as url
                     , um.menu_nm
                     , um.menu_srt_ord as srt_ord
                  from menu		as um
                  join (
                    select m.menu_id
                         , m.menu_up_id
                         , '' 	as url
                         , m.menu_nm
                         , m.menu_srt_ord as srt_ord
                      from menu 		m
                      join pgm			p
                        on p.menu_up_id	= m.menu_id
                    ) md
                    on md.menu_up_id	= um.menu_id
                 group by um.menu_id
                union all
                 select m.menu_id
                      , m.menu_up_id
                      , '' 	as url
                      , m.menu_nm
                      , m.menu_srt_ord as srt_ord
                   from menu 		m
                   join pgm			p
                     on p.menu_up_id	= m.menu_id
                  group by m.menu_id
                union all
                 select menu_id
                      , menu_up_id
                      , url
                      , menu_nm
                      , srt_ord
                   from pgm
            ) AS A
        ORDER BY CASE WHEN MENU_UP_ID IS NULL THEN 0 ELSE 1 END, CATEGORY, SRT_ORD
    </select>
</mapper>
