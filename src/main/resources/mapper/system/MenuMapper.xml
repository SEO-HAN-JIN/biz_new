<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.biz.framework.mapper.system.MenuMapper">

    <select id="findUpMenuList" resultType="CamelCaseMap">
        /* com.biz.framework.mapper.MenuMapper.findUpMenuList */
        SELECT *
          FROM MENU
         WHERE 1=1
           AND CO_CODE  = #{loginCoId}
           AND MENU_UP_ID IS NULL
        <if test='menuNm != null  and menuNm != "" '>
            AND MENU_NM LIKE CONCAT('%', #{menuNm}, '%')
        </if>
         ORDER BY MENU_SRT_ORD
    </select>

    <select id="findMenuListByMenuUpId" resultType="CamelCaseMap">
        /* com.biz.framework.mapper.MenuMapper.findMenuListByMenuUpId */
        SELECT *
          FROM MENU
         WHERE 1=1
           AND CO_CODE      = #{loginCoId}
           AND MENU_UP_ID   = #{menuUpId}
         ORDER BY MENU_SRT_ORD
    </select>

    <insert id="saveMenuList">
        /* com.biz.framework.mapper.MenuMapper.saveMenuList */
        INSERT INTO MENU (
            CO_CODE
            , MENU_ID
            , MENU_NM
            , MENU_SRT_ORD
            , MENU_UP_ID
        ) VALUES (
            #{loginCoId}
            , (SELECT IFNULL(MAX(MENU_ID), 0) + 1 FROM MENU M WHERE M.CO_CODE = #{loginCoId})
            , #{menuNm}
            , #{menuSrtOrd}
            , #{menuUpId}
        )
    </insert>

    <update id="updateMenuList">
        /* com.biz.framework.mapper.MenuMapper.updateMenuList */
        UPDATE MENU
           SET MENU_NM          = #{menuNm}
             , MENU_SRT_ORD     = #{menuSrtOrd}
             , MENU_UP_ID       = #{menuUpId}
         WHERE 1=1
           AND CO_CODE          = #{loginCoId}
           AND MENU_ID          = #{menuId}
        <if test='menuUpId != null  and menuUpId != "" '>
           AND MENU_UP_ID       = #{menuUpId}
        </if>
    </update>

    <delete id="deleteMenu">
        /* com.biz.framework.mapper.MenuMapper.deleteMenu */
        DELETE FROM MENU
         WHERE CO_CODE      = #{loginCoId}
           AND MENU_ID      = #{menuId}
        <if test='menuUpId != null  and menuUpId != "" '>
            AND MENU_UP_ID  = #{menuUpId}
        </if>
    </delete>

    <select id="findMenuList" resultType="com.biz.framework.dto.system.MenuDto">
        /* com.biz.framework.mapper.MenuMapper.findMenuList */
        SELECT MENU_ID
             , MENU_NM
             , MENU_SRT_ORD
             , MENU_UP_ID
          FROM MENU
         WHERE CO_CODE  = #{loginCoId}
         ORDER BY MENU_UP_ID IS NOT NULL, MENU_SRT_ORD
    </select>

    <select id="findSideLayout" resultType="CamelCaseMap">
        /* com.biz.framework.mapper.MenuMapper.findSideLayout */
        WITH PGM AS (
            SELECT MP.CO_CODE
                 , CONCAT('PGM', MP.PROGRAM_ID)	AS MENU_ID
                 , MP.MENU_ID		            AS MENU_UP_ID
                 , PROGRAM_URL 		            AS URL
                 , PROGRAM_NM 		            AS MENU_NM
                 , PROGRAM_SRT_ORD 	            AS SRT_ORD
              FROM MENU_PROGRAM     MP
              JOIN PROGRAM 		    P
                ON P.CO_CODE        = MP.CO_CODE
               AND P.PROGRAM_ID     = MP.PROGRAM_ID
              JOIN ROLE_PROGRAM     RP
                ON RP.CO_CODE       = P.CO_CODE
               AND RP.PROGRAM_ID    = P.PROGRAM_ID
              JOIN ROLE_USER 		RU
                ON RU.CO_CODE       = RP.CO_CODE
               AND RU.ROLE_ID		= RP.ROLE_ID
             WHERE 1=1
               AND MP.CO_CODE = #{loginCoId}
               AND RU.ROLE_ID  IN
            <foreach item="item" collection="authorityList" open="(" separator="," close=")">
                #{item}
            </foreach>
             GROUP BY MP.CO_CODE, CONCAT('PGM', MP.PROGRAM_ID)
        )
        SELECT CO_CODE
             , CASE WHEN MENU_ID LIKE '%PGM%' THEN '3'
                    WHEN MENU_UP_ID IS NOT NULL THEN '2'
                    ELSE '1' END AS CATEGORY
             , MENU_ID
             , MENU_UP_ID
             , URL
             , MENU_NM
             , SRT_ORD
          FROM (
                SELECT UM.CO_CODE
                     , UM.MENU_ID
                     , UM.MENU_UP_ID
                     , '' 	AS URL
                     , UM.MENU_NM
                     , UM.MENU_SRT_ORD AS SRT_ORD
                  FROM MENU		AS UM
                  JOIN (
                    SELECT M.CO_CODE
                         , M.MENU_ID
                         , M.MENU_UP_ID
                         , '' 	AS URL
                         , M.MENU_NM
                         , M.MENU_SRT_ORD AS SRT_ORD
                      FROM MENU 		M
                      JOIN PGM			P
                        ON P.CO_CODE    = M.CO_CODE
                       AND P.MENU_UP_ID	= M.MENU_ID
                     WHERE M.CO_CODE    = #{loginCoId}
                    ) MD
                    ON MD.CO_CODE       = UM.CO_CODE
                   AND MD.MENU_UP_ID	= UM.MENU_ID
                 WHERE UM.CO_CODE       = #{loginCoId}
                 GROUP BY UM.MENU_ID
                UNION ALL
                 SELECT M.CO_cODE
                      , M.MENU_ID
                      , M.MENU_UP_ID
                      , '' 	AS URL
                      , M.MENU_NM
                      , M.MENU_SRT_ORD AS SRT_ORD
                   FROM MENU 		M
                   JOIN PGM			P
                     ON P.CO_CODE       = M.CO_CODE
                    AND P.MENU_UP_ID	= M.MENU_ID
                  WHERE M.CO_CODE       = #{loginCoId}
                  GROUP BY M.MENU_ID
                UNION ALL
                 SELECT CO_CODE
                      , MENU_ID
                      , MENU_UP_ID
                      , URL
                      , MENU_NM
                      , SRT_ORD
                   FROM PGM
                  WHERE CO_CODE     = #{loginCoId}
            ) AS A
        ORDER BY CASE WHEN MENU_UP_ID IS NULL THEN 0 ELSE 1 END, CATEGORY, SRT_ORD
    </select>
</mapper>
