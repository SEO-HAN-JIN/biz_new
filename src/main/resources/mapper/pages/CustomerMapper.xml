<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.biz.framework.mapper.pages.CustomerMapper">

    <select id="findCustomers" resultType="CamelCaseMap">
        /* com.biz.framework.mapper.pages.CustomerMapper.findCustomers */

        SELECT
            TC.CO_CODE,
            TC.BIZ_NO,
            TC.CUST_NAME,
            TC.EMP_ID,
            TC.OWNER_NAME,
            TC.CUST_ADDR,
            TC.CUST_TEL,
            TC.CUST_MAIL,
            TC.DEPOSITOR_NAME,
            TC.MILEAGE,
            TC.INCENTIVE_RATE,
            TC.BIZ_TYPE,
            TC.BIZ_CLASS,
            TC.USE_IND,
            TC.REG_DATE
        FROM TB_CUSTOMER TC
        LEFT JOIN EMP_CUSTOMER EC
             ON TC.CO_CODE = EC.CO_CODE
            AND TC.BIZ_NO = EC.BIZ_NO
        WHERE TC.CO_CODE = #{loginCoId}
        <if test='empId != null  and empId != "" '>
            AND EC.EMP_ID = #{empId}
        </if>
        <if test='bizNo != null  and bizNo != "" '>
            AND TC.BIZ_NO LIKE CONCAT('%',#{bizNo} ,'%')
        </if>
        <if test='custName != null  and custName != "" '>
            AND TC.CUST_NAME LIKE CONCAT('%',#{custName} ,'%')
        </if>
        GROUP BY    TC.CO_CODE,
                    TC.BIZ_NO,
                    TC.CUST_NAME,
                    TC.EMP_ID,
                    TC.OWNER_NAME,
                    TC.CUST_ADDR,
                    TC.CUST_TEL,
                    TC.CUST_MAIL,
                    TC.DEPOSITOR_NAME,
                    TC.MILEAGE,
                    TC.INCENTIVE_RATE


    </select>

    <select id="findCustomerInfo" resultType="CamelCaseMap">
        /* com.biz.framework.mapper.pages.CustomerMapper.findCustomerInfo */
        SELECT  T.*
          FROM TB_CUSTOMER      T
         WHERE 1=1
           AND T.CO_CODE        = #{loginCoId}
           AND T.BIZ_NO         = #{bizNo}
    </select>

    <insert id="saveCustomer">
        /* com.biz.framework.mapper.pages.CustomerMapper.saveCustomer */
        INSERT INTO TB_CUSTOMER
        (
            CO_CODE
            , BIZ_NO
            , CUST_NAME
            , OWNER_NAME
            , CUST_ADDR
            , CUST_TEL
            , CUST_MAIL
            , DEPOSITOR_NAME
            , MILEAGE
            , INCENTIVE_RATE
            , REG_DATE
            , USE_IND
            , BIZ_TYPE
            , BIZ_CLASS
        ) VALUES
        (
            #{loginCoId}
            , #{bizNo}
            , #{custName}
            , #{ownerName}
            , #{custAddr}
            , #{custTel}
            , #{custMail}
            , #{depositorName}
            , #{mileage}
            , #{incentiveRate}
            , DATE_FORMAT(NOW(), '%Y-%m-%d')
            , #{useInd}
            , #{bizType}
            , #{bizClass}
        ) ON DUPLICATE KEY UPDATE
            CUST_NAME           = #{custName}
            , EMP_ID            = #{empId}
            , OWNER_NAME        = #{ownerName}
            , CUST_ADDR         = #{custAddr}
            , CUST_TEL          = #{custTel}
            , CUST_MAIL         = #{custMail}
            , INCENTIVE_RATE    = #{incentiveRate}
            , DEPOSITOR_NAME    = #{depositorName}
            , MILEAGE           = #{mileage}
            , USE_IND           = #{useInd}
            , BIZ_TYPE          = #{bizType}
            , BIZ_CLASS         = #{bizClass}
    </insert>

    <delete id="deleteCustomer">
        /* com.biz.framework.mapper.pages.CustomerMapper.deleteCustomer */
        DELETE FROM TB_CUSTOMER
        WHERE CO_CODE   = #{loginCoId}
          AND BIZ_NO    = #{bizNo}
    </delete>

    <select id="checkDupl">
        /* com.biz.framework.mapper.pages.CustomerMapper.checkDupl */
        SELECT COUNT(1)
          FROM TB_CUSTOMER
         WHERE 1=1
           AND CO_CODE  = #{loginCoId}
           AND BIZ_NO   = #{bizNo}
    </select>

    <select id="findMileageByBizNo">
        /* com.biz.framework.mapper.pages.CustomerMapper.findMileageByBizNo */
        SELECT MILEAGE
          FROM TB_CUSTOMER
         WHERE 1=1
           AND CO_CODE  = #{coCode}
           AND BIZ_NO   = #{bizNo}
    </select>

    <update id="updateMileage">
        /* com.biz.framework.mapper.pages.CustomerMapper.updateMileage */
        UPDATE TB_CUSTOMER
          SET MILEAGE       = #{mileage}
        WHERE CO_CODE       = #{coCode}
          AND BIZ_NO        = #{bizNo}
    </update>

    <update id="updateFinalMileage">
        /* com.biz.framework.mapper.pages.CustomerMapper.updateFinalMileage */
        UPDATE TB_CUSTOMER
        SET MILEAGE = ( SELECT IFNULL(MILEAGE, 0)
                          FROM TB_CUSTOMER
                         WHERE CO_CODE  = #{coCode}
                           AND BIZ_NO   = #{bizNo}
                       ) + #{mileage}
        WHERE CO_CODE       = #{coCode}
          AND BIZ_NO        = #{bizNo}
    </update>

    <select id="findCustomerByLoginId">
        /* com.biz.framework.mapper.pages.CustomerMapper.findCustomerByLoginId */
        SELECT C.CO_CODE
             , EC.EMP_ID
             , E.EMP_NAME
             , C.BIZ_NO
             , C.CUST_NAME
          FROM TB_CUSTOMER      C
          JOIN EMP_CUSTOMER     EC
            ON EC.CO_CODE       = C.CO_CODE
           AND EC.BIZ_NO        = C.BIZ_NO
          JOIN TB_EMP           E
            ON E.CO_CODE        = EC.CO_CODE
           AND E.EMP_ID         = EC.EMP_ID
          WHERE C.CO_CODE       = #{loginCoId}
            AND E.EMP_ID        = #{loginUserId}
    </select>

</mapper>
